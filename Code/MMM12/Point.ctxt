#BlueJ class context
comment0.target=Point
comment0.text=\n\ Point\ is\ a\ class\ that\ represents\ a\ single\ point\ on\ the\ Coordinate\ System.\n\n\ @author\ Roy\ Bachar\n\ @version\ 1.0\ (25.\ Nov\ 2021)\n
comment1.params=x\ y
comment1.target=Point(int,\ int)
comment1.text=\n\ Constructs\ a\ new\ Point\ on\ the\ specified\ x,y\ coordinates.\n\ \n\ @param\ x\ the\ x\ coordinate\n\ @param\ y\ the\ y\ coordinate\n
comment10.params=other
comment10.target=boolean\ isLeft(Point)
comment10.text=\n\ Check\ if\ this\ Point\ is\ positioned\ on\ the\ left\ of\ the\ given\ Point.\n\ \n\ @param\ other\ the\ Point\ to\ check\ against\n\ @return\ true\ if\ this\ x\ value\ is\ smaller\ than\ the\ x\ value\ of\ the\ given\ Point,\ \n\ \ \ \ \ \ \ \ \ false\ otherwise.\n
comment11.params=other
comment11.target=boolean\ isRight(Point)
comment11.text=\n\ Check\ if\ this\ Point\ is\ positioned\ to\ the\ right\ of\ the\ given\ Point.\n\ \n\ @param\ other\ the\ Point\ to\ check\ against\n\ @return\ true\ if\ given\ Point\ is\ positioned\ to\ the\ left\ of\ this\ Point,\ \n\ \ \ \ \ \ \ \ \ false\ otherwise.\n
comment12.params=deltaX\ deltaY
comment12.target=void\ move(int,\ int)
comment12.text=\n\ Moves\ a\ Point\ by\ the\ provided\ values.\n\ \n\ @param\ deltaX\ the\ difference\ to\ add\ to\ x\n\ @param\ deltaY\ the\ difference\ to\ add\ to\ y\n
comment13.params=other
comment13.target=double\ distance(Point)
comment13.text=\n\ Calculate\ the\ distance\ between\ this\ Point\ to\ the\ given\ Point.\n\ \n\ @param\ other\ the\ Point\ to\ calculate\ the\ distance\ to\n\ @return\ the\ distance.\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\n\ @return\ a\ string\ representation\ of\ a\ Point\ in\ the\ format\ (x,y).\n
comment2.params=other
comment2.target=Point(Point)
comment2.text=\n\ Copy\ constructor\n\ @param\ other\ \ to\ be\ copied\n
comment3.params=
comment3.target=int\ getX()
comment3.text=\n\ @return\ the\ x\ coordinate\ of\ this\ Point.\n
comment4.params=
comment4.target=int\ getY()
comment4.text=\n\ @return\ the\ y\ coordinate\ of\ this\ Point.\n
comment5.params=x
comment5.target=void\ setX(int)
comment5.text=\n\ Set\ a\ new\ x\ value\ for\ this\ Point.\n\ @param\ x\ the\ value\ to\ be\ set\n
comment6.params=y
comment6.target=void\ setY(int)
comment6.text=\n\ Set\ a\ new\ y\ value\ for\ this\ Point.\n\ @param\ y\ the\ value\ to\ be\ set\n
comment7.params=other
comment7.target=boolean\ equals(Point)
comment7.text=\n\ Check\ if\ this\ Point\ is\ equal\ to\ the\ given\ Point.\n\ \n\ @param\ other\ the\ Point\ to\ compare\ with\n\ @return\ true\ if\ the\ coordinates\ are\ equal,\ \n\ \ \ \ \ \ \ \ \ false\ otherwise.\n
comment8.params=other
comment8.target=boolean\ isAbove(Point)
comment8.text=\n\ Check\ if\ this\ Point\ is\ positioned\ above\ the\ given\ Point.\n\ \n\ @param\ other\ the\ Point\ to\ compare\ with\n\ @return\ true\ if\ this\ y\ value\ is\ greater\ than\ the\ y\ value\ of\ the\ given\ Point,\n\ \ \ \ \ \ \ \ \ false\ otherwise.\n
comment9.params=other
comment9.target=boolean\ isUnder(Point)
comment9.text=\n\ Check\ if\ this\ Point\ is\ positioned\ below\ the\ given\ Point.\n\ \n\ @param\ other\ the\ Point\ to\ compare\ with\n\ @return\ true\ if\ the\ given\ point\ is\ above\ this\ Point,\ \n\ \ \ \ \ \ \ \ \ false\ otherwise.\n
numComments=15
